/*
 * Node API
 * query node counts and pre-launch nodes
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gridlastic.grid.model;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

/**
 * NodeCount
 */
public class NodeCount {
    public static final String SERIALIZED_NAME_TOTAL = "total";
    @SerializedName(SERIALIZED_NAME_TOTAL)
    private Integer total;

    public static final String SERIALIZED_NAME_BUSY = "busy";
    @SerializedName(SERIALIZED_NAME_BUSY)
    private Integer busy;

    public static final String SERIALIZED_NAME_FREE = "free";
    @SerializedName(SERIALIZED_NAME_FREE)
    private Integer free;

    public NodeCount() {
    }

    public NodeCount total(Integer total) {

        this.total = total;
        return this;
    }

    /**
     * Get total
     *
     * @return total
     **/
    @javax.annotation.Nullable
    public Integer getTotal() {
        return total;
    }


    public void setTotal(Integer total) {
        this.total = total;
    }


    public NodeCount busy(Integer busy) {

        this.busy = busy;
        return this;
    }

    /**
     * Get busy
     *
     * @return busy
     **/
    @javax.annotation.Nullable
    public Integer getBusy() {
        return busy;
    }


    public void setBusy(Integer busy) {
        this.busy = busy;
    }


    public NodeCount free(Integer free) {

        this.free = free;
        return this;
    }

    /**
     * Get free
     *
     * @return free
     **/
    @javax.annotation.Nullable
    public Integer getFree() {
        return free;
    }


    public void setFree(Integer free) {
        this.free = free;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        NodeCount nodeCount = (NodeCount) o;
        return Objects.equals(this.total, nodeCount.total) &&
                Objects.equals(this.busy, nodeCount.busy) &&
                Objects.equals(this.free, nodeCount.free);
    }

    @Override
    public int hashCode() {
        return Objects.hash(total, busy, free);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class NodeCount {\n");
        sb.append("    total: ").append(toIndentedString(total)).append("\n");
        sb.append("    busy: ").append(toIndentedString(busy)).append("\n");
        sb.append("    free: ").append(toIndentedString(free)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

